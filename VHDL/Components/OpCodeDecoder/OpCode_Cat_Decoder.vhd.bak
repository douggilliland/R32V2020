------------------------------------------------------------------
-- OpCode_Decoder
-- https://github.com/douggilliland/R32V2020/wiki/Instruction-Decoder

library ieee;
use ieee.std_logic_1164.all;
use  IEEE.STD_LOGIC_ARITH.all;
use  IEEE.STD_LOGIC_UNSIGNED.all;

entity OpCode_Decoder is
	port (
		clk			: in std_logic;
		InstrOpCode	: in std_logic_vector(7 downto 0);
		Op_XOR		: in std_logic;
		Op_OR			: in std_logic;
		Op_Add		: in std_logic;
		regDataA		: in std_logic_vector(31 downto 0);
		regDataB		: in std_logic_vector(31 downto 0);
		ALUDataOut	: out std_logic_vector(31 downto 0)
	);
end OpCode_Decoder;

architecture struct of OpCode_Decoder is

signal	InstrCat			: std_logic_vector(2 downto 0);
signal	System_OpCode	: std_logic;
signal	ALU_OpCode		: std_logic;
signal	LdSt_OpCode		: std_logic;
signal	Perip_OpCode	: std_logic;
signal	FlowCtl_OpCode	: std_logic;

signal	HCF_Opcode		: std_logic;
signal	NOP_Opcode		: std_logic;
signal	RES_Opcode		: std_logic;

signal	ADD_Opcode		: std_logic;

begin

InstrCat <= InstrOpCode(7 downto 5);
System_OpCode 	<= '1' when InstrCat = "000" else '0';
ALU_OpCode 		<= '1' when InstrCat = "001" else '0';
LdSt_OpCode		<= '1' when InstrCat = "010" else '0';
Perip_OpCode	<= '1' when InstrCat = "011" else '0';
FlowCtl_OpCode	<= '1' when InstrCat = "100" else '0';

-- System OpCodes
HCF_Opcode		<= '1' when (System_OpCode = '1' and (InstrOpCode(4 downto 0) = "00000")) else '0';
NOP_Opcode		<= '1' when (System_OpCode = '1' and (InstrOpCode(4 downto 0) = "00001")) else '0';
RES_Opcode		<= '1' when (System_OpCode = '1' and (InstrOpCode(4 downto 0) = "00010")) else '0';

-- ALU OpCodes
ADD_Opcode		<= '1' when (ALU_OpCode = '1' and (InstrOpCode(4 downto 0) = "00010")) else '0';

end struct;
