vendor_name = ModelSim
source_file = 1, C:/Users/Doug/Documents/GitHub/R32V2020/VHDL/Components/BlockRam_Data/BlockRam_Data.qip
source_file = 1, C:/Users/Doug/Documents/GitHub/R32V2020/VHDL/Components/BlockRam_Data/BlockRam_Data.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/aglobal181.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altrom.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altram.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, c:/intelfpga_lite/18.1/quartus/libraries/megafunctions/cbx.lst
source_file = 1, C:/Users/Doug/Documents/GitHub/R32V2020/VHDL/Components/BlockRam_Data/db/altsyncram_dvn3.tdf
design_name = hard_block
design_name = BlockRam_Data
instance = comp, \q[0]~output\, q[0]~output, BlockRam_Data, 1
instance = comp, \q[1]~output\, q[1]~output, BlockRam_Data, 1
instance = comp, \q[2]~output\, q[2]~output, BlockRam_Data, 1
instance = comp, \q[3]~output\, q[3]~output, BlockRam_Data, 1
instance = comp, \q[4]~output\, q[4]~output, BlockRam_Data, 1
instance = comp, \q[5]~output\, q[5]~output, BlockRam_Data, 1
instance = comp, \q[6]~output\, q[6]~output, BlockRam_Data, 1
instance = comp, \q[7]~output\, q[7]~output, BlockRam_Data, 1
instance = comp, \q[8]~output\, q[8]~output, BlockRam_Data, 1
instance = comp, \q[9]~output\, q[9]~output, BlockRam_Data, 1
instance = comp, \q[10]~output\, q[10]~output, BlockRam_Data, 1
instance = comp, \q[11]~output\, q[11]~output, BlockRam_Data, 1
instance = comp, \q[12]~output\, q[12]~output, BlockRam_Data, 1
instance = comp, \q[13]~output\, q[13]~output, BlockRam_Data, 1
instance = comp, \q[14]~output\, q[14]~output, BlockRam_Data, 1
instance = comp, \q[15]~output\, q[15]~output, BlockRam_Data, 1
instance = comp, \q[16]~output\, q[16]~output, BlockRam_Data, 1
instance = comp, \q[17]~output\, q[17]~output, BlockRam_Data, 1
instance = comp, \q[18]~output\, q[18]~output, BlockRam_Data, 1
instance = comp, \q[19]~output\, q[19]~output, BlockRam_Data, 1
instance = comp, \q[20]~output\, q[20]~output, BlockRam_Data, 1
instance = comp, \q[21]~output\, q[21]~output, BlockRam_Data, 1
instance = comp, \q[22]~output\, q[22]~output, BlockRam_Data, 1
instance = comp, \q[23]~output\, q[23]~output, BlockRam_Data, 1
instance = comp, \q[24]~output\, q[24]~output, BlockRam_Data, 1
instance = comp, \q[25]~output\, q[25]~output, BlockRam_Data, 1
instance = comp, \q[26]~output\, q[26]~output, BlockRam_Data, 1
instance = comp, \q[27]~output\, q[27]~output, BlockRam_Data, 1
instance = comp, \q[28]~output\, q[28]~output, BlockRam_Data, 1
instance = comp, \q[29]~output\, q[29]~output, BlockRam_Data, 1
instance = comp, \q[30]~output\, q[30]~output, BlockRam_Data, 1
instance = comp, \q[31]~output\, q[31]~output, BlockRam_Data, 1
instance = comp, \wren~input\, wren~input, BlockRam_Data, 1
instance = comp, \clock~input\, clock~input, BlockRam_Data, 1
instance = comp, \clock~inputclkctrl\, clock~inputclkctrl, BlockRam_Data, 1
instance = comp, \data[0]~input\, data[0]~input, BlockRam_Data, 1
instance = comp, \wraddress[0]~input\, wraddress[0]~input, BlockRam_Data, 1
instance = comp, \wraddress[1]~input\, wraddress[1]~input, BlockRam_Data, 1
instance = comp, \wraddress[2]~input\, wraddress[2]~input, BlockRam_Data, 1
instance = comp, \wraddress[3]~input\, wraddress[3]~input, BlockRam_Data, 1
instance = comp, \wraddress[4]~input\, wraddress[4]~input, BlockRam_Data, 1
instance = comp, \wraddress[5]~input\, wraddress[5]~input, BlockRam_Data, 1
instance = comp, \wraddress[6]~input\, wraddress[6]~input, BlockRam_Data, 1
instance = comp, \wraddress[7]~input\, wraddress[7]~input, BlockRam_Data, 1
instance = comp, \rdaddress[0]~input\, rdaddress[0]~input, BlockRam_Data, 1
instance = comp, \rdaddress[1]~input\, rdaddress[1]~input, BlockRam_Data, 1
instance = comp, \rdaddress[2]~input\, rdaddress[2]~input, BlockRam_Data, 1
instance = comp, \rdaddress[3]~input\, rdaddress[3]~input, BlockRam_Data, 1
instance = comp, \rdaddress[4]~input\, rdaddress[4]~input, BlockRam_Data, 1
instance = comp, \rdaddress[5]~input\, rdaddress[5]~input, BlockRam_Data, 1
instance = comp, \rdaddress[6]~input\, rdaddress[6]~input, BlockRam_Data, 1
instance = comp, \rdaddress[7]~input\, rdaddress[7]~input, BlockRam_Data, 1
instance = comp, \data[1]~input\, data[1]~input, BlockRam_Data, 1
instance = comp, \data[2]~input\, data[2]~input, BlockRam_Data, 1
instance = comp, \data[3]~input\, data[3]~input, BlockRam_Data, 1
instance = comp, \data[4]~input\, data[4]~input, BlockRam_Data, 1
instance = comp, \data[5]~input\, data[5]~input, BlockRam_Data, 1
instance = comp, \data[6]~input\, data[6]~input, BlockRam_Data, 1
instance = comp, \data[7]~input\, data[7]~input, BlockRam_Data, 1
instance = comp, \data[8]~input\, data[8]~input, BlockRam_Data, 1
instance = comp, \data[9]~input\, data[9]~input, BlockRam_Data, 1
instance = comp, \data[10]~input\, data[10]~input, BlockRam_Data, 1
instance = comp, \data[11]~input\, data[11]~input, BlockRam_Data, 1
instance = comp, \data[12]~input\, data[12]~input, BlockRam_Data, 1
instance = comp, \data[13]~input\, data[13]~input, BlockRam_Data, 1
instance = comp, \data[14]~input\, data[14]~input, BlockRam_Data, 1
instance = comp, \data[15]~input\, data[15]~input, BlockRam_Data, 1
instance = comp, \data[16]~input\, data[16]~input, BlockRam_Data, 1
instance = comp, \data[17]~input\, data[17]~input, BlockRam_Data, 1
instance = comp, \data[18]~input\, data[18]~input, BlockRam_Data, 1
instance = comp, \data[19]~input\, data[19]~input, BlockRam_Data, 1
instance = comp, \data[20]~input\, data[20]~input, BlockRam_Data, 1
instance = comp, \data[21]~input\, data[21]~input, BlockRam_Data, 1
instance = comp, \data[22]~input\, data[22]~input, BlockRam_Data, 1
instance = comp, \data[23]~input\, data[23]~input, BlockRam_Data, 1
instance = comp, \data[24]~input\, data[24]~input, BlockRam_Data, 1
instance = comp, \data[25]~input\, data[25]~input, BlockRam_Data, 1
instance = comp, \data[26]~input\, data[26]~input, BlockRam_Data, 1
instance = comp, \data[27]~input\, data[27]~input, BlockRam_Data, 1
instance = comp, \data[28]~input\, data[28]~input, BlockRam_Data, 1
instance = comp, \data[29]~input\, data[29]~input, BlockRam_Data, 1
instance = comp, \data[30]~input\, data[30]~input, BlockRam_Data, 1
instance = comp, \data[31]~input\, data[31]~input, BlockRam_Data, 1
instance = comp, \altsyncram_component|auto_generated|ram_block1a0\, altsyncram_component|auto_generated|ram_block1a0, BlockRam_Data, 1
