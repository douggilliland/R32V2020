; Read PS/2 keyboard character and put it to the Screen
start:
00000000	20400000		add	SAR,r0,r0	; Initialize Stack Pointer (used for return address)
00000001	A2407000		sss	r7			; push the call address -1
00000002	C000002B		bra	clearScreen
00000003	20500000		add	par,r0,r0	; start of screen
readDataMemory:
00000004	20600000		add	dar,r0,r0	; clear the data memory addr pointer
00000005	64806000		ldl	r8			; get the long again
00000006	31808000		ens r8,r8		; endian swap for right byte order
00000007	A2407000		sss	r7			; store PC on the stack
00000008	C000002F		bra	putChar
00000009	28808000		sr8	r8,r8
0000000a	A2407000		sss	r7
0000000b	C000002C		bra	putChar
0000000c	28808000		sr8	r8,r8
0000000d	A2407000		sss	r7
0000000e	C0000029		bra	putChar
0000000f	28808000		sr8	r8,r8
00000010	A2407000		sss	r7
00000011	C0000026		bra	putChar
00000012	20661000		add	dar,dar,r1	; increment the data pointer
00000013	64806000		ldl	r8			; get the long again
00000014	31808000		ens r8,r8		; endian swap for right byte order
00000015	A2407000		sss	r7			; store PC on the stack
00000016	C0000021		bra	putChar
00000017	28808000		sr8	r8,r8
00000018	A2407000		sss	r7
00000019	C000001E		bra	putChar
0000001a	28808000		sr8	r8,r8
0000001b	A2407000		sss	r7
0000001c	C000001B		bra	putChar
0000001d	28808000		sr8	r8,r8
0000001e	A2407000		sss	r7
0000001f	C0000018		bra	putChar
readKBStat:
00000020	42E00800		lix	r14,0x0800
00000021	42C01000		lix	r12,0x1000
00000022	42D00010		lix	r13,0x0010	; 16th column on the screen (middle of the first line)
loopStatRead:
00000023	205C0000		add	par,r12,r0	; kb status address
loopReadKbStat:
00000024	84B05000		lpl	r11			; get the kb status value
00000025	23BB1000		and	r11,r11,r1	; test the data present bit
00000026	C3FFFFFE		bez	loopReadKbStat
readKeyboardData:
00000027	205E0000		add	par,r14,r0	; keyboard data port address
00000028	84805000		lpl	r8			; read the keyboard data (r8 used as the character to put to screen)
storeToScreen:
00000029	205D0000		add par,r13,r0	; Screen address
0000002a	A2407000		sss	r7			; push return address-1
0000002b	C000000C		bra	putChar
0000002c	C0FFFFF7		bra	loopStatRead
;
; clearScreen - Clear the screen routine
; Fills the screen with space characters
; Screen is memory mapped
; Screen is 64 columns by 32 rows = 2KB total space
; Return address (-1) is on the stack - need to increment before return
;

clearScreen:
0000002d	20500000		add par,r0,r0	; start of screen character memory
0000002e	42800020		lix	r8,0x0020	; fill with spaces
0000002f	429007FE		lix r9,0x7FE	; loopCount	(1K minus 1)
looper:
00000030	81508000		spb r8			; put the character to the screen
00000031	20551000		add	par,par,r1	; Increment screen pointer
00000032	20992000		add r9,r9,r2	; decrement character counter
00000033	D2FFFFFD		bne	looper		; loop until complete
00000034	A3904000		lss	r9			; load calling address
00000035	20991000		add	r9,r9,r1	; skip the call
00000036	20791000		add	r7,r9,r1	; jump to the next address (rts)

;
; putChar - Put a character to the screen and increment the address
; Character to put to screen is in r8
; Return address (-1) is on the stack - need to increment before return
;

putChar:
00000037	81508000		spb	r8			; write character to peripheral bus
00000038	20551000		add	par,par,r1	; Go to the next character position	
00000039	A3904000		lss	r9			; load calling address
0000003a	20991000		add	r9,r9,r1	; inc by 1 to skip the call
0000003b	20791000		add	r7,r9,r1	; jump to the next address (rts)
	