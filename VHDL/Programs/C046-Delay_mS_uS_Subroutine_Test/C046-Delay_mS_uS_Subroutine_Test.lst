dataPlaceHolder:	.string "R32V2020> "
secsCount:	.long 0x0
; delay_mS Test
00000000	41600000		liu	DAR,secsCount.upper
00000001	40600003		lil	DAR,secsCount.lower
00000002	42800000		lix	r8,0
00000003	65608000		sdl	r8
start:
00000004	41600000		liu	DAR,secsCount.upper
00000005	40600003		lil	DAR,secsCount.lower
00000006	64806000		ldl	r8
00000007	D4000015		bsr	wr7Seg8Dig
00000008	A0408000		push	r8				; save the counter
00000009	428003E8		lix	r8,1000			; count for 1 Sec
0000000a	D4000005		bsr	delay_mS		; call delay_ms
0000000b	A1804000		pull	r8				; restore r8
0000000c	20881000		add	r8,r8,ONE
0000000d	65608000		sdl	r8
0000000e	C0FFFFF6		bra	start

; delay_mS - delay for the number of mSecs passed in r8
; pass mSec delay in r8
; Uses routine uses r9

delay_mS:
0000000f	A0409000		push	r9 
00000010	A0408000		push	r8
00000011	4290C350		lix	r9,50000	; Count for 50,000 counts = 1 mSec count
00000012	21889000		mul	r8,r8,r9	; total number of clocks to count
00000013	42503800		lix	PAR,0x3800	; address of the elapsed time counter
00000014	84905000		lpl	r9			; read the peripheral counter into r9
00000015	20898000		add	r8,r9,r8	; terminal counter to wait until is in r8
loop_delay_mS:
00000016	84905000		lpl	r9			; check the elapsed time counter
00000017	30398000		cmp	r9,r8
00000018	CFFFFFFE		bgt	loop_delay_mS
00000019	A1804000		pull	r8
0000001a	A1904000		pull	r9
0000001b	A1704000		pull	PC
	
; wr7Seg8Dig
; passed r8 - value to send to the 7 seg display

wr7Seg8Dig:
0000001c	42503000		lix	PAR,0x3000		; Seven Segment LED lines
0000001d	85508000		spl	r8				; Write out LED bits
0000001e	A1704000		pull	PC
