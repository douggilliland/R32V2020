; Fast Screen test
start:
00000000	20400000		ads	SAR,r0,r0	; Initialize Stack Pointer (used for return address)
00000001	A2407000		sss	r7			; push the call address -1
00000002	C0000014		bra	clearScreen
00000003	A2407000		sss	r7			; push the call address -1
00000004	C0000002		bra	fastFillScreen
00000005	C0FFFFFB		bra	start

; fastFillScreen - Fills the screen with test pattern
fastFillScreen:
00000006	20500000		ads par,r0,r0	; start of screen character memory
00000007	20800000		ads r8,r0,r0	; clear the character
00000008	40800000		lil	r8,0x0000	; fill with spaces
00000009	20900000		ads r9,r0,r0	; screen count
0000000a	409007FE		lil r9,0x7FE	; loopCount	(1K minus 1)
0000000b	20A00000		ads	r10,r0,r0	; character mask
0000000c	40A000FF		lil	r10,0xff
looperFast:
0000000d	81508000		spb r8			; put the character to the screen
0000000e	20551000		ads	par,par,r1	; Increment screen pointer
0000000f	20992000		ads r9,r9,r2	; decrement character counter
00000010	20881000		ads	r8,r8,r1	; increment the character to the screen
00000011	2388A000		ars	r8,r8,r10
00000012	D2FFFFFB		bne	looperFast		; loop until complete
00000013	A3904000		lss	r9			; load calling address
00000014	20991000		ads	r9,r9,r1	; skip the call
00000015	20791000		ads	r7,r9,r1	; jump to the next address (rts)

;
; clearScreen - Clear the screen routine
; Fills the screen with space characters
; Screen is memory mapped
; Screen is 64 columns by 32 rows = 2KB total space
; Return address (-1) is on the stack - need to increment before return
;

clearScreen:
00000016	20500000		ads par,r0,r0	; start of screen character memory
00000017	20800000		ads r8,r0,r0	; clear the character
00000018	40800020		lil	r8,0x0020	; fill with spaces
00000019	20900000		ads r9,r0,r0	; screen count
0000001a	409007FE		lil r9,0x7FE	; loopCount	(1K minus 1)
looper:
0000001b	81508000		spb r8			; put the character to the screen
0000001c	20551000		ads	par,par,r1	; Increment screen pointer
0000001d	20992000		ads r9,r9,r2	; decrement character counter
0000001e	D2FFFFFD		bne	looper		; loop until complete
0000001f	A3904000		lss	r9			; load calling address
00000020	20991000		ads	r9,r9,r1	; skip the call
00000021	20791000		ads	r7,r9,r1	; jump to the next address (rts)

;
; putChar - Put a character to the screen and increment the address
; Character to put to screen is in r8
; Return address (-1) is on the stack - need to increment before return
;

putChar:
00000022	81508000		spb	r8			; write character to peripheral bus
00000023	20551000		ads	par,par,r1	; Go to the next character position	
00000024	A3904000		lss	r9			; load calling address
00000025	20991000		ads	r9,r9,r1	; inc by 1 to skip the call
00000026	20791000		ads	r7,r9,r1	; jump to the next address (rts)
	