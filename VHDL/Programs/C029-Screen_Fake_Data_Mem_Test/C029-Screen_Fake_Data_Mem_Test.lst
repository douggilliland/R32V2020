start:
00000000	20400000		add	SAR,r0,r0	; Use Stack for return address
00000001	A2407000		sss	r7			; push the call address -1
00000002	C000002D		bra	clearScreen
00000003	20500000		add	par,r0,r0	; start of screen
readDataMemory:
00000004	20600000		add	dar,r0,r0	; clear the data memory addr pointer
00000005	64806000		ldl	r8			; get the long again
00000006	31808000		ens r8,r8		; endian swap for right byte order
00000007	A2407000		sss	r7			; store PC on the stack
00000008	C0000033		bra	putChar
00000009	28808000		sr8	r8,r8
0000000a	A2407000		sss	r7
0000000b	C0000030		bra	putChar
0000000c	28808000		sr8	r8,r8
0000000d	A2407000		sss	r7
0000000e	C000002D		bra	putChar
0000000f	28808000		sr8	r8,r8
00000010	A2407000		sss	r7
00000011	C000002A		bra	putChar
00000012	20661000		add	dar,dar,r1	; increment the data pointer
00000013	64806000		ldl	r8			; get the long again
00000014	31808000		ens r8,r8		; endian swap for right byte order
00000015	A2407000		sss	r7			; store PC on the stack
00000016	C0000025		bra	putChar
00000017	28808000		sr8	r8,r8
00000018	A2407000		sss	r7
00000019	C0000022		bra	putChar
0000001a	28808000		sr8	r8,r8
0000001b	A2407000		sss	r7
0000001c	C000001F		bra	putChar
0000001d	28808000		sr8	r8,r8
0000001e	A2407000		sss	r7
0000001f	C000001C		bra	putChar
00000020	20661000		add	dar,dar,r1	; increment the data pointer
00000021	64806000		ldl	r8			; get the long again
00000022	31808000		ens r8,r8		; endian swap for right byte order
00000023	A2407000		sss	r7			; store PC on the stack
00000024	C0000017		bra	putChar
00000025	28808000		sr8	r8,r8
00000026	A2407000		sss	r7
00000027	C0000014		bra	putChar
00000028	28808000		sr8	r8,r8
00000029	A2407000		sss	r7
0000002a	C0000011		bra	putChar
0000002b	28808000		sr8	r8,r8
0000002c	A2407000		sss	r7
0000002d	C000000E		bra	putChar
	
loop:
0000002e	C0000000		bra	loop
; Clear the screen routine
clearScreen:
0000002f	20500000		add r5,r0,r0	; start of screen character memory
00000030	20800000		add r8,r0,r0	; clear the character
00000031	40800020		lil	r8,0x0020	; fill with spaces
00000032	20900000		add r9,r0,r0	; screen count
00000033	409007FE		lil r9,0x7FE	; loopCount	
looper:
00000034	81508000		spb r8			; put the character to the screen
00000035	20551000		add	r5,r5,r1	; Increment screen pointer
00000036	20992000		add r9,r9,r2	; decrement character counter
00000037	D2FFFFFD		bne	looper		; loop until complete
00000038	A3A04000		lss	r10			; load calling address
00000039	20AA1000		add	r10,r10,r1	; skip the call
0000003a	207A1000		add	r7,r10,r1	; jump to the next address (rts)
; put a character to the screen and increment the address
putChar:
0000003b	81508000		spb	r8			; write character to peripheral bus
0000003c	20551000		add	r5,r5,r1	; Go to the next character position	
0000003d	A3A04000		lss	r10			; load calling address
0000003e	20AA1000		add	r10,r10,r1	; inc by 1 to skip the call
0000003f	207A1000		add	r7,r10,r1	; jump to the next address (rts)
	