; Read UART status and put it to the Seven Segment Display
start:
00000000	C0000015		bra	clearScreen
doneClear:
00000001	20500000		add r5,r0,r0	; start of screen character memory
00000002	20800000		add r8,r0,r0	; clear the character
00000003	40800048		lil	r8,0x0048	; ASCII 'H'
00000004	20971000		add	r9,r7,r1
00000005	C000001A		bra	putChar
00000006	40800065		lil	r8,0x0065	; ASCII 'e'
00000007	20971000		add	r9,r7,r1
00000008	C0000017		bra	putChar
00000009	40800065		lil	r8,0x0065	; ASCII 'e'
0000000a	20971000		add	r9,r7,r1
0000000b	C0000014		bra	putChar
readUartStatus:
0000000c	40501800		lil	r5,0x1800	; UART Status
0000000d	84905000		lpl	r9			; Read Status into r9
0000000e	25991000		and r9,r9,r1
0000000f	C3FFFFFD		bez readUartStatus
00000010	40501801		lil r5,0x1801
00000011	84A05000		lpl	r10
00000012	40503000		lil	r5,0x3000	; Seven Segment Display address
00000013	8550A000		spl	r10			; Write to the Seven Segment display
00000014	C0FFFFF8		bra	readUartStatus
; Clear the screen routine
clearScreen:
00000015	20500000		add r5,r0,r0	; start of screen character memory
00000016	20800000		add r8,r0,r0	; clear the character
00000017	40800020		lil	r8,0x0020	; fill with spaces
00000018	20900000		add r9,r0,r0	; screen count
00000019	409007FE		lil r9,0x7FE	; loopCount	
looper:
0000001a	81508000		spb r8			; put the character to the screen
0000001b	20551000		add	r5,r5,r1	; Increment screen pointer
0000001c	20992000		add r9,r9,r2	; decrement character counter
0000001d	D2FFFFFD		bne	looper		; loop until complete
0000001e	C0FFFFE3		bra	doneClear
; put a character to the screen and increment the address
putChar:
0000001f	81508000		spb	r8			; write character to peripheral bus
00000020	20551000		add	r5,r5,r1	; Go to the next character position	
00000021	20791000		add	r7,r9,r1	; return to calling routine (r9 is the calling address)
	