; Read UART character and put it to the SVGA Display
; Read UART character and put it to the SVGA Display
start:
00000000	20400000		add	SAR,r0,r0	; Use Stack for return address
00000001	A2407000		sss	r7			; push the call address -1
00000002	C000001D		bra	clearScreen
00000003	20500000		add	par,r0,r0	; start of screen
00000004	20600000		add	dar,r0,r0	; clear the data memory addr pointer
00000005	64806000		ldl	r8			; get the long again
00000006	39808000		ens r8,r8		; endian swap for right byte order
00000007	A2407000		sss	r7			; store PC on the stack
00000008	C0000023		bra	putChar
00000009	33808000		sr8	r8,r8
0000000a	A2407000		sss	r7
0000000b	C0000020		bra	putChar
0000000c	33808000		sr8	r8,r8
0000000d	A2407000		sss	r7
0000000e	C000001D		bra	putChar
0000000f	33808000		sr8	r8,r8
00000010	A2407000		sss	r7
00000011	C000001A		bra	putChar
00000012	20661000		add	dar,dar,r1	; increment the data pointer
00000013	20B50000		add	r11,par,r0	; save the screen pointer in r11
readUartStatus:
00000014	40501800		lil	par,0x1800	; UART Status
00000015	84905000		lpl	r9			; Read Status into r9
00000016	25991000		and r9,r9,r1
00000017	C3FFFFFD		bez readUartStatus
charToScreen:
00000018	40501801		lil par,0x1801
00000019	84805000		lpl	r8
0000001a	205B0000		add	par,r11,r0	; get the screen pointer
0000001b	A2407000		sss	r7			; return address
0000001c	C000000F		bra	putChar		; put the character to the screen
;	lil	par,0x3000	; Seven Segment Display address
;	spl	r10			; Write to the Seven Segment display
0000001d	20B50000		add	r11,par,r0	; save the screen pointer in r11
0000001e	C0FFFFF6		bra	readUartStatus
; Clear the screen routine
clearScreen:
0000001f	20500000		add par,r0,r0	; start of screen character memory
00000020	20800000		add r8,r0,r0	; clear the character
00000021	40800020		lil	r8,0x0020	; fill with spaces
00000022	20900000		add r9,r0,r0	; screen count
00000023	409007FE		lil r9,0x7FE	; loopCount	
looper:
00000024	81508000		spb r8			; put the character to the screen
00000025	20551000		add	par,par,r1	; Increment screen pointer
00000026	20992000		add r9,r9,r2	; decrement character counter
00000027	D2FFFFFD		bne	looper		; loop until complete
00000028	A3A04000		lss	r10			; load calling address
00000029	20AA1000		add	r10,r10,r1	; skip the call
0000002a	207A1000		add	r7,r10,r1	; jump to the next address (rts)
; put a character to the screen and increment the address
putChar:
0000002b	81508000		spb	r8			; write character to peripheral bus
0000002c	20551000		add	par,par,r1	; Go to the next character position	
0000002d	A3A04000		lss	r10			; load calling address
0000002e	20AA1000		add	r10,r10,r1	; inc by 1 to skip the call
0000002f	207A1000		add	r7,r10,r1	; jump to the next address (rts)
	